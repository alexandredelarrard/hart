version: "2"
services:
    flask_app:
        container_name: backend_api
        build: 
            context: ./app
            dockerfile: dockerfile
        expose:
            - 8888
        command: gunicorn --bind 0.0.0.0:8888 --workers 4 --threads 4 --timeout 120 app:app
        environment:
            - FLASK_ENV=development
        env_file:
            - ./app/.env
        restart: always
        # depends_on:
        #      - postgres_db
        # links:
        #     - postgres_db
    nginx:
        image: nginx:latest
        container_name: nginx
        ports:    
            - 80:80
            - 2000:2000
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
        restart: always
        depends_on: 
            - flask_app
    # postgres_db:
    #     image: postgres:latest
    #     container_name: postgres_db 
    #     environment:
    #         POSTGRES_PASSWORD: Alexan2re
    #         POSTGRES_DB: postgres
    #         POSTGRES_USER: postgres
    #         POSTGRES_HOST: localhost
    #     volumes:
    #         # - ./postgres_db/schemas/:/docker-entrypoint-initdb.d/
    #         - pgdata:/var/lib/postgresql/data
    #     ports:
    #         - 5432:5432
    #     restart: always

volumes:
    pgdata: 
