services:
    # chromadb:
    #     image: ghcr.io/chroma-core/chroma:latest
    #     container_name: chromadb
    #     ports:
    #         - "8000:8000"
    #     volumes:
    #         - D:/data/chroma_db/chroma_data:/chroma/chroma
    #     # command: "--workers 1 --host 0.0.0.0 --port 8000"
    #     healthcheck: 
    #         test: curl localhost:8000/api/v1/heartbeat || exit 1
    #         interval: 1000s
    #         retries: 2
    #         start_period: 5s
    #         timeout: 10s
    #     networks:
    #         - shared_net
    back_app:
        container_name: backend_api
        build: 
            context: ./app
            dockerfile: dockerfile
        expose:
            - 5000
        command: gunicorn --bind 0.0.0.0:5000 --workers 4 --threads 4 --timeout 120 app:app
        volumes: 
            - ./app:/app
        environment:
            - FLASK_ENV=flask_worker
        env_file:
            - ./.env
        restart: always
        networks:
            - shared_net
    nginx:
        image: nginx:latest
        container_name: back_nginx
        ports:    
            - 2000:2000
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
        restart: always
        depends_on: 
            - back_app
            # - flower
        networks:
            - shared_net
    celery:
        build:
            context: ./celery
            dockerfile: dockerfile
        # user: celeryuser
        container_name: celery
        volumes:
            - ./app:/app
            - D:/data/models:/data/models
            - D:/data/default:/data/default
        command: celery -A src.backend.tasks worker --pool=solo --loglevel=info --concurrency=1
        depends_on:
            - redis
            # - chromadb
        env_file:
            - ./.env
        environment:
            - FLASK_ENV=celery_worker
            - DB_HOST=host.docker.internal #chromadb
        deploy:
            resources:
                reservations:
                    devices:
                        - driver: nvidia
                          count: 1
                          capabilities: [gpu]
        networks:
            - shared_net
    redis:
        image: "redis:alpine"
        container_name: redis
        expose:
            - 6379
        ports:
            - "6379:6379"
        networks:
            - shared_net

networks: 
  shared_net:
    driver: bridge
    # external: true